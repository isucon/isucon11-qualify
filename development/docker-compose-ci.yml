version: "3.8"
services:
  backend:
    build:
      context: ..
      dockerfile: development/backend-${target}/ci.dockerfile
    environment:
      MYSQL_HOST: mysql-backend
      MYSQL_PORT: 3306
      MYSQL_DATABASE: isucondition
      MYSQL_USER: isucon
      MYSQL_PASSWORD: isucon
      SERVER_PUBLIC_ADDRESS: backend
      SERVER_PUBLIC_PORT: 3000
    ports:
      - "3000:3000"
    volumes:
      - "../webapp/ec256-public.pem:/webapp/ec256-public.pem"
      - "../webapp/NoImage.jpg:/webapp/NoImage.jpg"
      - "../webapp/sql:/webapp/sql"
    depends_on:
      - mysql-backend

  mysql-backend:
    build:
      context: .
      dockerfile: mysql-backend/Dockerfile
    restart: always
    environment:
      MYSQL_DATABASE: isucondition
      MYSQL_USER: isucon
      MYSQL_PASSWORD: isucon
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - "../webapp/sql/0_Schema.sql:/docker-entrypoint-initdb.d/0_Schema.sql"
    expose:
      - "3306"
    ports:
      - "3306:3306"

  apitest:
    build:
      context: ..
      dockerfile: development/apitest/ci.dockerfile
    environment:
      ISUXBENCH_TARGET: backend:3000
    entrypoint: dockerize -wait http://backend:3000 -timeout 60s
    command: ["/bench", "--no-load", "--exit-status"]
    volumes:
      - "../bench/images:/images"
      - "../bench/key:/key"
      - "../bench/data:/data"
      - "./certificates:/extra/certificates"
    depends_on:
      - mysql-backend
      - backend
